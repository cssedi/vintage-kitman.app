// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vintage_kitman_API.NewFolder;

#nullable disable

namespace vintage_kitman_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CountrySport", b =>
                {
                    b.Property<int>("CountriesCountryId")
                        .HasColumnType("int");

                    b.Property<int>("SportsSportId")
                        .HasColumnType("int");

                    b.HasKey("CountriesCountryId", "SportsSportId");

                    b.HasIndex("SportsSportId");

                    b.ToTable("CountrySport");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Flag = "https://www.countryflags.io/gb/flat/64.png",
                            Name = "England"
                        },
                        new
                        {
                            CountryId = 2,
                            Flag = "https://www.countryflags.io/es/flat/64.png",
                            Name = "Spain"
                        },
                        new
                        {
                            CountryId = 3,
                            Flag = "https://www.countryflags.io/it/flat/64.png",
                            Name = "Italy"
                        },
                        new
                        {
                            CountryId = 4,
                            Flag = "https://www.countryflags.io/de/flat/64.png",
                            Name = "Germany"
                        },
                        new
                        {
                            CountryId = 5,
                            Flag = "https://www.countryflags.io/fr/flat/64.png",
                            Name = "France"
                        },
                        new
                        {
                            CountryId = 6,
                            Flag = "https://www.countryflags.io/nl/flat/64.png",
                            Name = "Netherlands"
                        },
                        new
                        {
                            CountryId = 7,
                            Flag = "https://www.countryflags.io/sa/flat/64.png",
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            CountryId = 8,
                            Flag = "https://www.countryflags.io/us/flat/64.png",
                            Name = "USA"
                        },
                        new
                        {
                            CountryId = 9,
                            Flag = "https://www.countryflags.io/nz/flat/64.png",
                            Name = "New Zealand"
                        },
                        new
                        {
                            CountryId = 10,
                            Flag = "https://www.countryflags.io/za/flat/64.png",
                            Name = "South Africa"
                        },
                        new
                        {
                            CountryId = 11,
                            Flag = "https://www.countryflags.io/ar/flat/64.png",
                            Name = "Argentina"
                        },
                        new
                        {
                            CountryId = 12,
                            Flag = "https://www.countryflags.io/au/flat/64.png",
                            Name = "Australia"
                        });
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Kit", b =>
                {
                    b.Property<int>("KitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KitId"), 1L, 1);

                    b.Property<string>("FrontImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("KitId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("TeamId");

                    b.ToTable("kits");

                    b.HasData(
                        new
                        {
                            KitId = 2,
                            FrontImage = "https://soccerkingz.nl/wp-content/uploads/2022/07/546as4g65as-1-1.png",
                            Name = "Arsenal Away Jersey 88-90",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 1
                        },
                        new
                        {
                            KitId = 3,
                            FrontImage = "https://soccerkingz.nl/wp-content/uploads/2022/09/7f8aa5db-1-800x800.jpg",
                            Name = "Arsenal Home Jersey 99-00",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            KitId = 4,
                            FrontImage = "https://frostyfooty.com/cdn/shop/files/image_8a218b23-1482-4c92-b7ca-ec9cb0ea13f7.jpg?v=1685456474",
                            Name = "Manchester City Home Jersey 2022-23",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            KitId = 5,
                            FrontImage = "https://retrosleague.com/cdn/shop/products/a61_cb91b325-009e-4e88-87f1-fbc954a72908_1946x.jpg?v=1657566430",
                            Name = "Manchester City Home Jersey 2011-12",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            KitId = 6,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/157-scaled.jpg",
                            Name = "Manchester City The 10th Anniversary 93:20 jersey",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            KitId = 7,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/440.jpg",
                            Name = "Liverpool Home Jersey 2011-11",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 3
                        },
                        new
                        {
                            KitId = 8,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/456.jpg",
                            Name = "Liverpool Away Jersey 2001-01",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 3
                        },
                        new
                        {
                            KitId = 9,
                            FrontImage = "https://media.karousell.com/media/photos/products/2023/6/24/tottenham_hotspur_kids_2324_ho_1687582867_5033c5ca_progressive",
                            Name = "Tottenham Hotspur Kids Home Jersey 2023-24",
                            Price = 600,
                            ProductTypeId = 2,
                            TeamId = 4
                        },
                        new
                        {
                            KitId = 10,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1436.jpg",
                            Name = "Tottenham Hotspur Third Jersey 2023-24",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 4
                        },
                        new
                        {
                            KitId = 11,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/429.jpg",
                            Name = "Tottenham Hotspur Home Jersey 2006-07",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 4
                        },
                        new
                        {
                            KitId = 12,
                            FrontImage = "https://soccerkingz.nl/wp-content/uploads/2022/07/6a5s4gh6523g-1-1-1.png",
                            Name = "Manchester United Home Jersey 96-97",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 5
                        },
                        new
                        {
                            KitId = 13,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/166-scaled.jpg",
                            Name = "Manchester United Green Rosey Standard Version Special Jersey 2022-23",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 5
                        },
                        new
                        {
                            KitId = 14,
                            FrontImage = "https://soccerkingz.nl/wp-content/uploads/2022/07/65a4g65a4g65-1.png",
                            Name = "Manchester United Away Jersey 1982-83",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 5
                        },
                        new
                        {
                            KitId = 15,
                            FrontImage = "https://www.fandomkits.net/cdn/shop/products/Newcastle_Home_InsaneKits.com.png?v=1657965593",
                            Name = "Newcastle Home Jersey 1995-97",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 6
                        },
                        new
                        {
                            KitId = 16,
                            FrontImage = "https://www.fandomkits.net/cdn/shop/files/c650837a.jpg?v=1689615936",
                            Name = "Newcastle Home Jersey 2023-24",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 6
                        },
                        new
                        {
                            KitId = 17,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1414.jpg",
                            Name = "Real Madrid Away Jersey 2023-24",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 7
                        },
                        new
                        {
                            KitId = 18,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/445.jpg",
                            Name = "Real Madrid Home Jersey 2017-18",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 7
                        },
                        new
                        {
                            KitId = 19,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/462.jpg",
                            Name = "Real Madrid Champions League Commemorative Edition Jersey 1997-98",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 7
                        },
                        new
                        {
                            KitId = 20,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/142-scaled.jpg",
                            Name = "Real Madrid Dragon Standard Version Special Jersey 22-23",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 7
                        },
                        new
                        {
                            KitId = 21,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1526.jpg",
                            Name = "Barcelona Baby Romper Home Jersey 2023-24",
                            Price = 900,
                            ProductTypeId = 2,
                            TeamId = 8
                        },
                        new
                        {
                            KitId = 22,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1410.jpg",
                            Name = "Barcelona Home Jersey 2023-24",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 8
                        },
                        new
                        {
                            KitId = 23,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/475.jpg",
                            Name = "Barcelona Away Jersey 2003-04",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 8
                        },
                        new
                        {
                            KitId = 24,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/472.jpg",
                            Name = "Inter Home Jersey 1995-96",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 9
                        },
                        new
                        {
                            KitId = 25,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/422.jpg",
                            Name = "Inter Home Jersey 2004-005",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 9
                        },
                        new
                        {
                            KitId = 26,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/467.jpg",
                            Name = "Juventus Home Jersey 2014-15",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 10
                        },
                        new
                        {
                            KitId = 27,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/137-scaled.jpg",
                            Name = "Juventus Gucci Jersey 2023-24",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 10
                        },
                        new
                        {
                            KitId = 28,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/468.jpg",
                            Name = "AC Milan Away Jersey 1995-96",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 11
                        },
                        new
                        {
                            KitId = 29,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/441.jpg",
                            Name = "AC Milan Away Jersey 1995-96",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 11
                        },
                        new
                        {
                            KitId = 30,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/131.jpg",
                            Name = "AC Milan Camo Green Standard Version Special Jersey 22-23",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 11
                        },
                        new
                        {
                            KitId = 31,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/426.jpg",
                            Name = "Bayern Munich Home Jersey 1997-98",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 12
                        },
                        new
                        {
                            KitId = 32,
                            FrontImage = "https://d2j6dbq0eux0bg.cloudfront.net/images/64844288/3166492166.jpg",
                            Name = "Bayern Munich Home Baby Romper 2022-23",
                            Price = 450,
                            ProductTypeId = 2,
                            TeamId = 12
                        },
                        new
                        {
                            KitId = 33,
                            FrontImage = "https://www.fandomkits.net/cdn/shop/files/9c76d112.jpg?v=1684700866",
                            Name = "Bayern Munich Home Jersey 2023-24",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 12
                        },
                        new
                        {
                            KitId = 34,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1409.jpg",
                            Name = "Borussia Dortmund Home Jersey 23-24",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 13
                        },
                        new
                        {
                            KitId = 35,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/477.jpg",
                            Name = "Borussia Dortmund Home Jersey 1989",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 13
                        },
                        new
                        {
                            KitId = 36,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1494.jpg",
                            Name = "Paris Saint Germain Home Kids Jersey 2023-24",
                            Price = 450,
                            ProductTypeId = 2,
                            TeamId = 14
                        },
                        new
                        {
                            KitId = 37,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1408.jpg",
                            Name = "Paris Saint Germain Home Jersey 2023-24",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 14
                        },
                        new
                        {
                            KitId = 38,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1039.jpg",
                            Name = "England Home Jersey 1990",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 15
                        },
                        new
                        {
                            KitId = 39,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1020.jpg",
                            Name = "England Home Jersey 1996",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 15
                        },
                        new
                        {
                            KitId = 40,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1305.jpg",
                            Name = "France Graffiti Special World Cup Jersey 2022",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 16
                        },
                        new
                        {
                            KitId = 41,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1059.jpg",
                            Name = "France Home Jersey 1998",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 16
                        },
                        new
                        {
                            KitId = 42,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/STvQZrkF-879.jpg",
                            Name = "France Home Jersey 2000",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 16
                        },
                        new
                        {
                            KitId = 43,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/988.jpg",
                            Name = "Germany Away Jersey 2014",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 17
                        },
                        new
                        {
                            KitId = 44,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1024.jpg",
                            Name = "Germany Home Jersey 1994",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 17
                        },
                        new
                        {
                            KitId = 45,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/1047.jpg",
                            Name = "Germany Home Jersey 1998",
                            Price = 900,
                            ProductTypeId = 3,
                            TeamId = 17
                        },
                        new
                        {
                            KitId = 46,
                            FrontImage = "https://classic-shirts.com/eng_pm_ALL-BLACKS-NEW-ZELAND-RUGBY-ADIDAS-SHIRT-S-167044_1.jpg",
                            Name = "New Zealand All Blacks Home Jersey 2010",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 18
                        },
                        new
                        {
                            KitId = 47,
                            FrontImage = "https://classic-shirts.com/eng_pm_ALL-BLACKS-NEW-ZELAND-RUGBY-ADIDAS-SHIRT-S-167044_1.jpg",
                            Name = "South Africa Sprinboks Alternate Jersey 2023",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 19
                        },
                        new
                        {
                            KitId = 48,
                            FrontImage = "https://thefoschini.vtexassets.com/arquivos/ids/99734459-1200-1200?v=638358239488070000&width=1200&height=1200&aspect=true",
                            Name = "South Africa Sprinboks Home Jersey 2023",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 19
                        },
                        new
                        {
                            KitId = 49,
                            FrontImage = "https://shop-int.mercedesamgf1.com/cdn/shop/products/MAPF1RPMENSDRIVERTEE-BLACK-FRONT.jpg?v=1700594659&width=540",
                            Name = "Mercedes Mens 2023 Team Polo Black",
                            Price = 800,
                            ProductTypeId = 1,
                            TeamId = 20
                        },
                        new
                        {
                            KitId = 50,
                            FrontImage = "https://store.ferrari.com/product_image/1647597308912076/f/w1230.jpg",
                            Name = "Scuderia Ferrari Team T-shirt",
                            Price = 800,
                            ProductTypeId = 1,
                            TeamId = 21
                        },
                        new
                        {
                            KitId = 51,
                            FrontImage = "https://media.karousell.com/media/photos/products/2023/3/2/jersey_nba_golden_state_warrio_1677763452_37614dc0_progressive.jpg",
                            Name = "Golden State Warriors Home Jersey 2022-23",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 22
                        },
                        new
                        {
                            KitId = 52,
                            FrontImage = "https://webpixelscdn.fra1.digitaloceanspaces.com/the-locker-room/assets/526.jpeg",
                            Name = "Los Angeles Lakers Home Jersey 2022-23",
                            Price = 900,
                            ProductTypeId = 1,
                            TeamId = 23
                        });
                });

            modelBuilder.Entity("vintage_kitman_API.Model.KitOrders", b =>
                {
                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLongSleeve")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("KitId", "OrderId");

                    b.HasIndex("OrderId1");

                    b.HasIndex("SizeId");

                    b.ToTable("kitOrders");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.League", b =>
                {
                    b.Property<int>("LeagueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeagueId"), 1L, 1);

                    b.Property<bool>("IsWomensLeague")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("LeagueId");

                    b.HasIndex("SportId");

                    b.ToTable("leagues");

                    b.HasData(
                        new
                        {
                            LeagueId = 1,
                            IsWomensLeague = false,
                            Name = "Premier League",
                            SportId = 1
                        },
                        new
                        {
                            LeagueId = 2,
                            IsWomensLeague = false,
                            Name = "La Liga",
                            SportId = 1
                        },
                        new
                        {
                            LeagueId = 3,
                            IsWomensLeague = false,
                            Name = "Serie A",
                            SportId = 1
                        },
                        new
                        {
                            LeagueId = 4,
                            IsWomensLeague = false,
                            Name = "Bundesliga",
                            SportId = 1
                        },
                        new
                        {
                            LeagueId = 5,
                            IsWomensLeague = false,
                            Name = "Ligue 1",
                            SportId = 1
                        },
                        new
                        {
                            LeagueId = 6,
                            IsWomensLeague = false,
                            Name = "Saudi Pro League",
                            SportId = 1
                        },
                        new
                        {
                            LeagueId = 7,
                            IsWomensLeague = false,
                            Name = "MLS",
                            SportId = 1
                        },
                        new
                        {
                            LeagueId = 8,
                            IsWomensLeague = false,
                            Name = "National Football Teams",
                            SportId = 1
                        },
                        new
                        {
                            LeagueId = 9,
                            IsWomensLeague = false,
                            Name = "National Rugby Teams",
                            SportId = 2
                        },
                        new
                        {
                            LeagueId = 10,
                            IsWomensLeague = false,
                            Name = "Formula 1",
                            SportId = 4
                        },
                        new
                        {
                            LeagueId = 11,
                            IsWomensLeague = false,
                            Name = "NBA",
                            SportId = 5
                        });
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Orders", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomNumber")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderStatusId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderStatusId");

                    b.ToTable("orderStatuses");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTypeId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeChart")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductTypeId");

                    b.ToTable("productTypes");

                    b.HasData(
                        new
                        {
                            ProductTypeId = 1,
                            Name = "Adults New Kit"
                        },
                        new
                        {
                            ProductTypeId = 2,
                            Name = "Childrens Kit"
                        },
                        new
                        {
                            ProductTypeId = 3,
                            Name = "Adults Retro Kit"
                        });
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeId");

                    b.ToTable("sizes");

                    b.HasData(
                        new
                        {
                            SizeId = 1,
                            Name = "XS"
                        },
                        new
                        {
                            SizeId = 2,
                            Name = "S"
                        },
                        new
                        {
                            SizeId = 3,
                            Name = "M"
                        },
                        new
                        {
                            SizeId = 4,
                            Name = "L"
                        },
                        new
                        {
                            SizeId = 5,
                            Name = "XL"
                        },
                        new
                        {
                            SizeId = 6,
                            Name = "XXL"
                        });
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SportId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportId");

                    b.ToTable("sports");

                    b.HasData(
                        new
                        {
                            SportId = 1,
                            Name = "Football"
                        },
                        new
                        {
                            SportId = 2,
                            Name = "Rugby"
                        },
                        new
                        {
                            SportId = 3,
                            Name = "NFL"
                        },
                        new
                        {
                            SportId = 4,
                            Name = "Formula 1"
                        },
                        new
                        {
                            SportId = 5,
                            Name = "Basketball"
                        });
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"), 1L, 1);

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.HasIndex("LeagueId");

                    b.ToTable("teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            LeagueId = 1,
                            Logo = "https://1000logos.net/wp-content/uploads/2016/10/Arsenal-Logo-768x480.png",
                            Name = "Arsenal"
                        },
                        new
                        {
                            TeamId = 2,
                            LeagueId = 1,
                            Logo = "https://1000logos.net/wp-content/uploads/2017/05/Manchester-City-Logo-768x480.png",
                            Name = "Manchester City"
                        },
                        new
                        {
                            TeamId = 3,
                            LeagueId = 1,
                            Logo = "https://1000logos.net/wp-content/uploads/2017/04/Logo-Liverpool-768x480.png",
                            Name = "Liverpool"
                        },
                        new
                        {
                            TeamId = 4,
                            LeagueId = 1,
                            Logo = "https://1000logos.net/wp-content/uploads/2018/06/Tottenham_Hotspur_Logo.png",
                            Name = "Tottenham Hotspur"
                        },
                        new
                        {
                            TeamId = 5,
                            LeagueId = 1,
                            Logo = "https://1000logos.net/wp-content/uploads/2017/03/Manchester-United-Logo-493x500.png",
                            Name = "Manchester United"
                        },
                        new
                        {
                            TeamId = 6,
                            LeagueId = 1,
                            Logo = "https://1000logos.net/wp-content/uploads/2021/05/Newcastle-United-logo-768x489.png",
                            Name = "Newcastle"
                        },
                        new
                        {
                            TeamId = 7,
                            LeagueId = 2,
                            Logo = "https://1000logos.net/wp-content/uploads/2020/09/Real-Madrid-logo-768x512.png",
                            Name = "Real Madrid"
                        },
                        new
                        {
                            TeamId = 8,
                            LeagueId = 2,
                            Logo = "https://1000logos.net/wp-content/uploads/2016/10/Barcelona-Logo-768x480.png",
                            Name = "Barcelona"
                        },
                        new
                        {
                            TeamId = 9,
                            LeagueId = 3,
                            Logo = "https://1000logos.net/wp-content/uploads/2021/05/Inter-Milan-logo.png",
                            Name = "Inter"
                        },
                        new
                        {
                            TeamId = 10,
                            LeagueId = 3,
                            Logo = "https://1000logos.net/wp-content/uploads/2021/05/Juventus-logo-768x432.png",
                            Name = "Juventus"
                        },
                        new
                        {
                            TeamId = 11,
                            LeagueId = 3,
                            Logo = "https://1000logos.net/wp-content/uploads/2016/10/AC-Milan-Logo-768x432.png",
                            Name = "AC Milan"
                        },
                        new
                        {
                            TeamId = 12,
                            LeagueId = 4,
                            Logo = "https://1000logos.net/wp-content/uploads/2018/05/Bayern-M%C3%BCnchen-Logo.png",
                            Name = "Bayern Munich"
                        },
                        new
                        {
                            TeamId = 13,
                            LeagueId = 4,
                            Logo = "https://1000logos.net/wp-content/uploads/2017/08/BVB-Logo-768x650.png",
                            Name = "Borussia Dortmund"
                        },
                        new
                        {
                            TeamId = 14,
                            LeagueId = 5,
                            Logo = "https://1000logos.net/wp-content/uploads/2018/05/PSG-Logo-768x480.png",
                            Name = "Paris Saint Germain"
                        },
                        new
                        {
                            TeamId = 15,
                            LeagueId = 8,
                            Logo = "https://upload.wikimedia.org/wikipedia/en/thumb/8/8b/England_national_football_team_crest.svg/1200px-England_national_football_team_crest.svg.png",
                            Name = "England"
                        },
                        new
                        {
                            TeamId = 16,
                            LeagueId = 8,
                            Logo = "https://upload.wikimedia.org/wikipedia/en/thumb/2/23/French_Football_Federation_logo.svg/800px-French_Football_Federation_logo.svg.png",
                            Name = "France"
                        },
                        new
                        {
                            TeamId = 17,
                            LeagueId = 8,
                            Logo = "https://static.wikia.nocookie.net/fifa/images/9/9b/Germany.png/revision/latest?cb=20180218192918",
                            Name = "Germany"
                        },
                        new
                        {
                            TeamId = 18,
                            LeagueId = 9,
                            Logo = "https://upload.wikimedia.org/wikipedia/en/f/fb/All_Blacks_logo.svg",
                            Name = "New Zealand"
                        },
                        new
                        {
                            TeamId = 19,
                            LeagueId = 9,
                            Logo = "https://i.pinimg.com/originals/2b/6b/71/2b6b7193800091dfebdfdee96b9d52dc.png",
                            Name = "South Africa"
                        },
                        new
                        {
                            TeamId = 20,
                            LeagueId = 10,
                            Logo = "https://logolook.net/wp-content/uploads/2022/05/Mercedes-Benz-Logo.svg",
                            Name = "Mercedes"
                        },
                        new
                        {
                            TeamId = 21,
                            LeagueId = 10,
                            Logo = "https://i.pinimg.com/736x/66/90/a5/6690a56d025509839bd609be8f8f8bb8.jpg",
                            Name = "Ferrari"
                        },
                        new
                        {
                            TeamId = 22,
                            LeagueId = 11,
                            Logo = "https://1000logos.net/wp-content/uploads/2018/03/Golden-State-Warriors-logo-768x432.png",
                            Name = "Golden State Warriors"
                        },
                        new
                        {
                            TeamId = 23,
                            LeagueId = 11,
                            Logo = "https://1000logos.net/wp-content/uploads/2017/03/Los-angeles-lakers-768x480.png",
                            Name = "Los Angeles Lakers"
                        });
                });

            modelBuilder.Entity("vintage_kitman_API.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CountrySport", b =>
                {
                    b.HasOne("vintage_kitman_API.Model.Country", null)
                        .WithMany()
                        .HasForeignKey("CountriesCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vintage_kitman_API.Model.Sport", null)
                        .WithMany()
                        .HasForeignKey("SportsSportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("vintage_kitman_API.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("vintage_kitman_API.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vintage_kitman_API.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("vintage_kitman_API.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Kit", b =>
                {
                    b.HasOne("vintage_kitman_API.Model.ProductType", "ProductType")
                        .WithMany("Kits")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vintage_kitman_API.Model.Team", "Team")
                        .WithMany("Kits")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.KitOrders", b =>
                {
                    b.HasOne("vintage_kitman_API.Model.Kit", "Kit")
                        .WithMany("kitOrders")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vintage_kitman_API.Model.Orders", "Order")
                        .WithMany("kitOrders")
                        .HasForeignKey("OrderId1");

                    b.HasOne("vintage_kitman_API.Model.Size", "Size")
                        .WithMany("Kits")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kit");

                    b.Navigation("Order");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.League", b =>
                {
                    b.HasOne("vintage_kitman_API.Model.Sport", "Sport")
                        .WithMany("Leagues")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Orders", b =>
                {
                    b.HasOne("vintage_kitman_API.Model.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vintage_kitman_API.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("OrderStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Team", b =>
                {
                    b.HasOne("vintage_kitman_API.Model.League", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Kit", b =>
                {
                    b.Navigation("kitOrders");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.League", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Orders", b =>
                {
                    b.Navigation("kitOrders");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.ProductType", b =>
                {
                    b.Navigation("Kits");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Size", b =>
                {
                    b.Navigation("Kits");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Sport", b =>
                {
                    b.Navigation("Leagues");
                });

            modelBuilder.Entity("vintage_kitman_API.Model.Team", b =>
                {
                    b.Navigation("Kits");
                });
#pragma warning restore 612, 618
        }
    }
}
